<#@ template debug="false" hostspecific="false" language="C#" #>
<html>
	<head>
		<title>This is my title</title>
	</head>
	<body>
		<ul class="nav nav-tabs" ng-controller="MenuController">
		  <li ng-class="{ 'active': isActive('/') }"><a href="#/">Home</a></li>
		  <li ng-class="{ 'active': isActive('/about') }"><a href="#/about">About</a></li>
		  <li ng-class="{ 'active': isActive('/widget/overview') }"><a href="#/widget/overview">Widget/Overview</a></li>
		  <li ng-class="{ 'active': isActive('/widget/settings') }"><a href="#/widget/settings">Widget/Settings</a></li>
		  <li ng-class="{ 'active': isActive('/widget/player') }"><a href="#/widget/player">Widget/Player</a></li>
		</ul>
		<div id="content">
            <div ng-view></div>

            <script type="text/ng-template" id="/index.html">
                <h2>Index</h2>
				<p>Here's a variable from the controller: {{ SomeData }}</p>

				<form class="smart-form" name="multiplication" ng-submit="multiplication.$valid && Submit()">
					<header>
						<h2>Enter a number to test command architecture</h2>
					</header>
					<fieldset>
                        <section>
                            <label class="input">
                                <input class="form-control" type="input" placeholder="Enter a number to multiply it by 2" name="number" ng-model="Mathematics.Number" required>
                            </label>
                            <em ng-show="multiplication.number.$dirty && multiplication.number.$invalid && multiplication.number.$error.required" class="ng-hide">Please enter a number to multiply</em>
                        </section>
                    </fieldset>
					<footer>
                        <button class="btn btn-primary" ng-disabled="MathematicsActions.Communicating || multiplication.$invalid" disabled="disabled">
                            <img ng-show="MathematicsActions.Communicating" src="/assets/img/loading.gif" class="ng-hide"><i ng-hide="MathematicsActions.Communicating" class="fa fa-arrow-right"></i> Multiply
                        </button>
                    </footer>
				</form>
				
				<h3>Here's the result of the multiplication: {{ Mathematics.Result }}</h3>
				<div ng-if="Mathematics.Result != 0">
					<p>The process this just went through:</p>
					<ul>
						<li>Angular.Submit()</li>
						<li>Through the sandbox between Procon.UI Window and this plugins iframe with postMessage</li>
						<li>Emitted via websocket to the Procon UI</li>
						<li>Credentials attached and the command, sent to a running Procon 2 C# Instance</li>
						<li>Deserialized by Procon 2, routed to a specific connection</li>
						<li>Crosses the sandbox into the Plugin AppDomain</li>
						<li>Routes the command "TestPluginSimpleMultiplyByTwoCommand" at https://github.com/Myrcon/Procon-2/blob/master/src/Myrcon.Plugins.Test/Tests/TestPluginsWebUi.cs </li>
						<li>Multiplies the number.</li>
						<li>Reverse of above.</li>
					</ul>
				</div>
            </script>

            <script type="text/ng-template" id="/about.html">
                <h2>About</h2>
				<p>This plugin is made by Geoff to demonstrate making a basic plugin UI.</p>
            </script>

            <script type="text/ng-template" id="/widget/overview.html">
                <h2>This is a plugin panel generated from the C# instance</h2>
				<p>You can see this text being pulled from procon at https://github.com/Myrcon/Procon-2/blob/master/src/Myrcon.Plugins.Test/Pages/IndexPageView.tt </p>
				<p>Panels like this will be displayed around Procon. It's entirely up to the plugin developer what content and functionality shows up in this little panel.</p>
            </script>

            <script type="text/ng-template" id="/widget/settings.html">
                <h2>This is a plugin panel generated from the C# instance</h2>
				<p>You can see this text being pulled from procon at https://github.com/Myrcon/Procon-2/blob/master/src/Myrcon.Plugins.Test/Pages/IndexPageView.tt </p>
				<p>Procon 2 is very broad on its protocol. This panel could be used to display game-specific functionality of settings</p>
            </script>

            <script type="text/ng-template" id="/widget/player.html">
                <h2>This is a plugin panel generated from the C# instance</h2>
				<p>You can see this text being pulled from procon at https://github.com/Myrcon/Procon-2/blob/master/src/Myrcon.Plugins.Test/Pages/IndexPageView.tt </p>
				<p>This panel could be used to display additional infromation, statistics etc. about this particular player.</p>
            </script>
		</div>
	</body>
</html>