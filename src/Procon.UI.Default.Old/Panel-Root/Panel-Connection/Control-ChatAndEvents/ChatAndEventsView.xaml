<!--
Copyright 2011 Cameron 'Imisnew2' Gunnin

http://www.phogue.net

This file is part of Procon 2.

Procon 2 is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Procon 2 is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Procon 2.  If not, see<http://www.gnu.org/licenses/>
-->

<GroupBox x:Class="Procon.UI.Default.Root.Connection.ChatAndEvents.ChatAndEventsView"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:conv="clr-namespace:Procon.UI.API.Converters;assembly=Procon.UI.API"
          xmlns:view="clr-namespace:Procon.UI.API.ViewModels;assembly=Procon.UI.API"
          Name="ConnectionChatAndEvents"
          KeyboardNavigation.TabNavigation="Local">
    <GroupBox.Resources>
        <conv:TextLocalizationConverter x:Key="TextLoc" />
        <conv:EnumLocalizationConverter x:Key="EnumLoc" />
        <DataTemplate DataType="{x:Type sys:Enum}">
            <TextBlock Text="{Binding Converter={StaticResource EnumLoc}}" />
        </DataTemplate>

        <TextBlock x:Key="TimeText"      Text="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Time}" />
        <TextBlock x:Key="TypeText"      Text="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Type}" />
        <TextBlock x:Key="SenderText"    Text="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Sender}" />
        <TextBlock x:Key="RecipientText" Text="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Recipient}" />
        <TextBlock x:Key="DataText"      Text="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Data}" />
    </GroupBox.Resources>

    <DockPanel Name="ConnectionChatAndEventsPanel">
        <!--Admin Messaging Portion-->
        <DockPanel Name="ConnectionChatAndEventsMessagePanel"
                   DockPanel.Dock="Bottom"
                   Margin="0, 3, 0, 0">
            <ComboBox Name="ConnectionChatAndEventsMessageType"
                      DockPanel.Dock="Left"
                      Margin="0, 0, 3, 0"
                      TabIndex="4"
                      ItemsSource="{Binding  Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Types].Value}"
                      SelectedItem="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Type].Value}" />
            <ComboBox Name="ConnectionChatAndEventsMessageSubset"
                      DockPanel.Dock="Left"
                      Margin="0, 0, 3, 0"
                      TabIndex="5"
                      ItemsSource="{Binding  Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Subsets].Value}"
                      SelectedItem="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Subset].Value}" />
            <ComboBox Name="ConnectionChatAndEventsMessageSubsetTeam"
                      DockPanel.Dock="Left"
                      Margin="0, 0, 3, 0"
                      TabIndex="6"
                      ItemsSource="{Binding  Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Teams].Value}"
                      SelectedItem="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Subset][Team].Value}">
                <ComboBox.Style>
                    <!--Hides the Squad combo-box unless the "Subset" item is "Team" or "Squad"-->
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Subset].Value}"
                                         Value="Team">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Subset].Value}"
                                         Value="Squad">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <ComboBox Name="ConnectionChatAndEventsMessageSubsetSquad"
                      DockPanel.Dock="Left"
                      Margin="0, 0, 3, 0"
                      TabIndex="7"
                      ItemsSource="{Binding  Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Squads].Value}"
                      SelectedItem="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Subset][Squad].Value}">
                <ComboBox.Style>
                    <!--Hides the Squad combo-box unless the "To" item is "Squad"-->
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Subset].Value}"
                                            Value="Squad">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <ComboBox Name="ConnectionChatAndEventsMessageSubsetPlayer"
                      DockPanel.Dock="Left"
                      Margin="0, 0, 3, 0"
                      TabIndex="8"
                      ItemsSource="{Binding  Path=Players}"
                      SelectedItem="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Subset][Player].Value}">
                <ComboBox.Style>
                    <!--Hides the Player combo-box unless the "To" item is "Player"-->
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Subset].Value}"
                                            Value="Player">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <Button  Name="ConnectionChatAndEventsMessageSend"
                     DockPanel.Dock="Right"
                     Margin="3, 0, 0, 0"
                     TabIndex="10"
                     Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Send}"
                     Command="{Binding Source={x:Static view:InstanceViewModel.PublicCommands}, Path=[Connection][Action][Chat].Value}" />
            <TextBox Name="ConnectionChatAndEventsMessageData"
                     TabIndex="9"
                     Text="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Action][Chat][Data].Value, UpdateSourceTrigger=PropertyChanged}" />
        </DockPanel>
            
        
        
        <!--Filter Box Portion-->
        <GroupBox Name="ConnectionChatAndEventsFilterPanel"
                  DockPanel.Dock="Right"
                  Width="175"
                  Margin="3, 0, 0, 0"
                  Header="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Filter}">
            <Grid Name="ConnectionChatAndEventsFilterArea">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="3" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="3" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="3"    />
                    <ColumnDefinition Width="*"    />
                </Grid.ColumnDefinitions>
                <Label Name="ConnectionChatAndEventsFilterTextTitle"
                       Grid.Row="0" Grid.Column="0"
                       Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Text}" />
                <Label Name="ConnectionChatAndEventsFilterTypeTitle"
                       Grid.Row="2" Grid.Column="0"
                       Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Method}" />
                <Label Name="ConnectionChatAndEventsFilterFieldTitle"
                       Grid.Row="4" Grid.Column="0"
                       Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.Field}" />
                <TextBox  Name="ConnectionChatAndEventsFilterTextInput"
                          Grid.Row="0" Grid.Column="2"
                          TabIndex="0"
                          Text="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Filter][Chat][Data].Value, UpdateSourceTrigger=PropertyChanged}"
                          TextChanged="FilterChatCriteriaChanged" />
                <ComboBox Name="ConnectionChatAndEventsFilterTypeInput"
                          Grid.Row="2" Grid.Column="2"
                          TabIndex="1"
                          ItemsSource="{Binding  Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Filter][Chat][Types].Value}"
                          SelectedItem="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Filter][Chat][Type].Value}"
                          SelectionChanged="FilterChatCriteriaChanged" />
                <ComboBox Name="ConnectionChatAndEventsFilterFieldInput"
                          Grid.Row="4" Grid.Column="2"
                          TabIndex="2"
                          ItemsSource="{Binding  Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Filter][Chat][Fields].Value}"
                          SelectedItem="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Filter][Chat][Field].Value}"
                          SelectionChanged="FilterChatCriteriaChanged" />
                <Button   Name="ConnectionChatAndEventsFilterOpen"
                          Grid.Row="6" Grid.ColumnSpan="3"
                          TabIndex="3"
                          Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.Connection.ChatAndEvents.AddlFilters}"
                          Command="{Binding Source={x:Static view:InstanceViewModel.PublicCommands}, Path=[Connection][Filter][Chat][Open].Value}" />
            </Grid>
        </GroupBox>
            
        
        
        <!--Chat and Events Portion-->
        <DataGrid Name="ConnectionChatAndEventsBox"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserResizeRows="False"
                  GridLinesVisibility="Horizontal"
                  IsReadOnly="True"
                  IsTabStop="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                  ItemsSource="{Binding Path=Events}">
            <DataGrid.Columns>
                <DataGridTextColumn Width="60" 
                                    Header="{StaticResource TimeText}"
                                    Binding="{Binding Path=Time}" />
                <DataGridTextColumn Width="60" 
                                    Header="{StaticResource TypeText}"
                                    Binding="{Binding Path=Type}" />
                <DataGridTextColumn Width="100" 
                                    Header="{StaticResource SenderText}"
                                    Binding="{Binding Path=Sender}" />
                <DataGridTextColumn Width="100"
                                    Header="{StaticResource RecipientText}"
                                    Binding="{Binding Path=Recipient}" />
                <DataGridTextColumn Width="330"
                                    Header="{StaticResource DataText}"
                                    Binding="{Binding Path=Information}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</GroupBox>
