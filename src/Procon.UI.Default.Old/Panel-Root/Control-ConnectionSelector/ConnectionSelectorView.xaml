<!--
Copyright 2011 Cameron 'Imisnew2' Gunnin

http://www.phogue.net

This file is part of Procon 2.

Procon 2 is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Procon 2 is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Procon 2.  If not, see<http://www.gnu.org/licenses/>
-->

<StackPanel x:Class="Procon.UI.Default.Root.ConnectionSelector.ConnectionSelectorView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
            xmlns:conv="clr-namespace:Procon.UI.API.Converters;assembly=Procon.UI.API"
            xmlns:view="clr-namespace:Procon.UI.API.ViewModels;assembly=Procon.UI.API"
            DataContext="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Interface].Value}"
            Name="ConnectionSelector">
    <StackPanel.Resources>
        <conv:TextLocalizationConverter x:Key="TextLoc" />
        <conv:EnumLocalizationConverter x:Key="EnumLoc" />
        <DataTemplate DataType="{x:Type sys:Enum}">
            <TextBlock Text="{Binding Converter={StaticResource EnumLoc}}" />
        </DataTemplate>
        
        <!--Displays connections as buttons (so we can hook into click event)-->
        <DataTemplate DataType="{x:Type view:ConnectionViewModel}">
            <Button DockPanel.Dock="Left"
                    Width="25"
                    Height="25"
                    HorizontalAlignment="Left"
                    HorizontalContentAlignment="Left"
                    MouseEnter="ExpandConnectionTab"
                    MouseLeave="ShrinkConnectionTab"
                    Command="{Binding Source={x:Static view:InstanceViewModel.PublicCommands}, Path=[SetPanel].Value}"
                    CommandParameter="{Binding}">
                <Button.Content>
                    <DockPanel>
                        <!--Game Type and Connection State Icons-->
                        <Image DockPanel.Dock="Left"
                               Stretch="Uniform"
                               Source="{Binding Path=GameTypeIcon}" />
                        <Image DockPanel.Dock="Left"
                               Margin="5, 0"
                               Stretch="Uniform"
                               Source="{Binding Path=ConnectionStateIcon}" />
                        
                        <!--Current Player and Max Player Counts-->
                        <Label DockPanel.Dock="Left"
                               IsHitTestVisible="False"
                               HorizontalContentAlignment="Center"
                               Content="[" />
                        <Label DockPanel.Dock="Left"
                               IsHitTestVisible="False"
                               HorizontalContentAlignment="Center"
                               Content="{Binding Path=PlayerCount}" />
                        <Label DockPanel.Dock="Left"
                               IsHitTestVisible="False"
                               HorizontalContentAlignment="Center"
                               Content="/" />
                        <Label DockPanel.Dock="Left"
                               IsHitTestVisible="False"
                               HorizontalContentAlignment="Center"
                               Content="{Binding Path=MaxPlayerCount}" />
                        <Label DockPanel.Dock="Left"
                               IsHitTestVisible="False"
                               HorizontalContentAlignment="Center"
                               Content="]" />

                        <!--Remove Connection Button-->
                        <Button DockPanel.Dock="Right"
                                Width="30"
                                Command="{Binding Source={x:Static view:InstanceViewModel.PublicCommands}, Path=[Connection][Remove].Value}"
                                CommandParameter="{Binding}">
                            <!--vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv-->
                            <!--NOTE: The following makes the remove button look more natural.-->
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border CornerRadius="10, 0, 0, 10"
                                            BorderThickness="1, 0, 0, 0"
                                            BorderBrush="#FF777777">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="#22000000" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#33000000" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <ContentPresenter HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          RecognizesAccessKey="True" />
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                            <!--vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv-->
                            <!--NOTE: The previous makes the remove button look more natural.-->
                            <Image Stretch="Uniform"
                                   Source="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Images][Connection][Remove].Value}" />
                        </Button>


                        <!--Server Name-->
                        <Label DockPanel.Dock="Left"
                               Margin="5, 0"
                               HorizontalContentAlignment="Left"
                               Content="{Binding Path=ServerName}" />
                        
                        <!--Padding-->
                        <Label Content="                                                                                       " />
                    </DockPanel>
                </Button.Content>
            </Button>
        </DataTemplate>
    </StackPanel.Resources>

    
    <!--All the connections currently established-->
    <ItemsControl Name="ConnectionSelectorSelect"
                  ItemsSource="{Binding Path=Connections}" />
        
    <!--Add connection panel-->
    <Border Name="ConnectionSelectorAddPanel"
            Width="25"
            Height="25"
            CornerRadius="2"
            BorderThickness="1"
            Padding="1"
            Margin="1, 1, 0, 0"
            HorizontalAlignment="Left"
            MouseEnter="ExpandAddTab"
            MouseLeave="ShrinkAddTab">
        <!--vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv-->
        <!--NOTE: The following is copy-pasta to make this border look like a button.-->
        <Border.Resources>
            <Color x:Key="ControlLightColor">White</Color>
            <Color x:Key="ControlMediumColor">#FFD0D0D0</Color>
            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
            <Color x:Key="BorderDarkColor">#FF444444</Color>
        </Border.Resources>
        <Border.BorderBrush>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource BorderLightColor}" Offset="0.0" />
                        <GradientStop Color="{StaticResource BorderDarkColor}"  Offset="1.0" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
        </Border.BorderBrush>
        <Border.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="{StaticResource ControlLightColor}"  Offset="0" />
                <GradientStop Color="{StaticResource ControlMediumColor}" Offset="1" />
            </LinearGradientBrush>
        </Border.Background>
        <!--NOTE: The previous is copy-pasta to make this border look like a button.-->
        <!--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-->
        <Grid Name="ConnectionSelectorAddArea">
            <Grid.RowDefinitions>
                <RowDefinition Height="19"   />
                <RowDefinition Height="3"    />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="3"    />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="3"    />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="3"    />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="3"    />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="3"    />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="3"    />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="3"    />
                <ColumnDefinition Width="*"    />
            </Grid.ColumnDefinitions>
            <!--Add Connection Image / Label-->
            <Image Grid.Row="0"
                   Grid.Column="0"
                   Stretch="Uniform"
                   HorizontalAlignment="Left"
                   Source="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Images][Connection][Add].Value}" />
            <Label Grid.Row="0"
                   Grid.Column="2"
                   Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Root.ConnectionSelector.AddConnection}" />
        
            <!--Add Connection Labels-->
            <Label Grid.Row="2"
                   Grid.Column="0"
                   Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Input.Type}" />
            <Label Grid.Row="4"
                   Grid.Column="0"
                   Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Input.Host}" />
            <Label Grid.Row="6"
                   Grid.Column="0"
                   Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Input.Port}" />
            <Label Grid.Row="8"
                   Grid.Column="0"
                   Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Input.Pass}" />
            <Label Grid.Row="10"
                   Grid.Column="0"
                   Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Input.Additional}" />

            <!--Add Connection Inputs-->
            <ComboBox Grid.Row="2"
                      Grid.Column="2" 
                      ItemsSource="{Binding  Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Add][Types].Value}"
                      SelectedItem="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Add][Type].Value}" />
            <TextBox  Grid.Row="4"
                      Grid.Column="2"
                      Text="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Add][Hostname].Value}" />
            <TextBox  Grid.Row="6"
                      Grid.Column="2"
                      Text="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Add][Port].Value}" />
            <TextBox  Grid.Row="8"
                      Grid.Column="2"
                      FontFamily="Wingdings"
                      Text="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Add][Password].Value}" />
            <TextBox  Grid.Row="10"
                      Grid.Column="2"
                      Text="{Binding Source={x:Static view:InstanceViewModel.PublicProperties}, Path=[Connection][Add][Additional].Value}" />
        
            <!--Add Connection Button-->
            <Button Grid.Row="12"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Content="{Binding Converter={StaticResource TextLoc}, ConverterParameter=Procon.UI.Default.Button.Add}"
                    Command="{Binding Source={x:Static view:InstanceViewModel.PublicCommands}, Path=[Connection][Add].Value}"/>
        </Grid>
    </Border>
</StackPanel>