<!--
// Copyright 2011 Cameron 'Imisnew2' Gunnin
// 
// http://www.phogue.net
//  
// This file is part of Procon 2.
// 
// Procon 2 is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Procon 2 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Procon 2.  If not, see<http://www.gnu.org/licenses/> .
-->

<Window x:Class="Procon.UI.Old.Windows.GameWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        Name="game_Root"
        Closing="Exiting_Game" Background="#0F1B29"
        Height="400" MinHeight="400" Width="600" MinWidth="600" Icon="../Images/procon2.ico">
    <Window.Resources>
        <!-- Ban List Context Menu -->
        <ContextMenu x:Key="BanListContextMenu">
            <MenuItem x:Name="menuitem_UnBan"
                      Header="{Binding Converter={StaticResource localizeBanConv}, ConverterParameter=UnBan}"
                      Icon="{StaticResource UnBan}"
                      Click="BanList_ContextMenuClicked" />
            <MenuItem x:Name="menuitem_ConvToPerm"
                      Header="{Binding Converter={StaticResource localizeBanConv}, ConverterParameter=ConvToPerm}"
                      Icon="{StaticResource ToPermanentBan}"
                      Click="BanList_ContextMenuClicked"  Visibility="Collapsed"/>
            <MenuItem x:Name="menuitem_ConvToTemp"
                      Header="{Binding Converter={StaticResource localizeBanConv}, ConverterParameter=ConvToTemp}"
                      Icon="{StaticResource ToTemporaryBan}"
                      Click="BanList_ContextMenuClicked"  Visibility="Collapsed"/>
        </ContextMenu>
            

        <!-- Resources -->
        <CollectionViewSource x:Key="cvs_Players"      Source="{Binding Path=GameState.PlayerList}" />
        <CollectionViewSource x:Key="cvs_MapPool"      Source="{Binding Path=GameState.MapPool}" />
        <CollectionViewSource x:Key="cvs_MapList"      Source="{Binding Path=GameState.MapList}" />
        <CollectionViewSource x:Key="cvs_BanList"      Source="{Binding Path=GameState.BanList}" />
        <CollectionViewSource x:Key="cvs_ChatMessages" Source="{Binding ElementName=game_Root, Path=ChatMessages}" />

        <!-- Images -->
        <Image x:Key="Apply"        Width="18" Height="18" Source="{StaticResource ApplyIconSource}" />
        <Image x:Key="RestartRound" Width="18" Height="18" Source="{StaticResource RestartRoundIconSource}" />
        <Image x:Key="RestartMap"   Width="18" Height="18" Source="{StaticResource RestartMapIconSource}" />
        <Image x:Key="NextRound"    Width="18" Height="18" Source="{StaticResource NextRoundIconSource}" />
        <Image x:Key="NextMap"      Width="18" Height="18" Source="{StaticResource NextMapIconSource}" />
        <Image x:Key="MoveLeft"     Width="18" Height="18" Source="{StaticResource LeftIconSource}" />
        <Image x:Key="MoveRight"    Width="18" Height="18" Source="{StaticResource RightIconSource}" />
        <Image x:Key="MoveUp"       Width="18" Height="18" Source="{StaticResource UpIconSource}" />
        <Image x:Key="MoveDown"     Width="18" Height="18" Source="{StaticResource DownIconSource}" />
    </Window.Resources>

    
    
    <Grid Name="grid_Main">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="*" MinHeight="150" />
            <RowDefinition Height="3" />
            <RowDefinition Height="120" MinHeight="100" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
        </Grid.ColumnDefinitions>
        
        
        <!-- Quick Management Controls -->
        <StackPanel Orientation="Horizontal"
                    Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3" Visibility="Collapsed"
                    Background="{StaticResource ControlBackgroundBrush}">
            <Button Name="button_1" 
                    Margin="0, 0, 3, 0" Content="Quick 1" />
            <Button Name="button_2"
                    Margin="0, 0, 3, 0" Content="Quick 2" />
            <Button Name="button_3"
                    Margin="0, 0, 3, 0" Content="Quick 3" />
            <Button Name="button_4"
                    Margin="0, 0, 3, 0" Content="Quick 4" />
            <Button Name="button_5"
                    Margin="0, 0, 3, 0" Content="Quick 5" />
            <Button Name="button_6"
                    Margin="0, 0, 3, 0" Content="Quick 6" />
            <Button Name="button_7"
                    Margin="0, 0, 3, 0" Content="Quick 7" />
            <Button Name="button_8"
                    Margin="0, 0, 3, 0" Content="Quick 8" />
            <Button Name="button_9"
                    Margin="0, 0, 3, 0" Content="Quick 9" />
            <Button Name="button_10"
                    Margin="0, 0, 3, 0" Content="Quick 10" />
        </StackPanel>
        
        
        <!-- Main Content Controls -->
        <TabControl Name="tabcontrol_Content"
                    Grid.Row="2" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1">
            <!--
            [Player List Tab]
            This tab allows the user to manage player-related activities on their server.
            Such activities include: Viewing a player's information, warning/kicking/banning
            players, and filtering a player's chat in the chat log.
            -->
            <TabItem Name="tabitem_PlayerList">
                <DataGrid Name="datagrid_PlayerList"
                          ContextMenuOpening="PlayerList_ContextMenuOpened"
                          ItemsSource="{Binding Source={StaticResource cvs_Players}}">
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Border Background="#DFEBF9" BorderBrush="#9FABB9" BorderThickness="1">
                                                    <StackPanel>
                                                        <DockPanel>
                                                            <TextBlock FontWeight="Bold" Margin="5, 0" Width="100"
                                                                       Text="{Binding Path=Name, Converter={StaticResource localizeConv},
                                                                                        ConverterParameter=Procon.UI.Team}" />
                                                            <TextBlock FontWeight="Bold" Margin="5, 0"
                                                                       Text="{Binding Path=ItemCount, StringFormat=Team Members: {0:D}}"/>
                                                        </DockPanel>
                                                        <ItemsPresenter />
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                </DataGrid>
            </TabItem>
            <!--
            [Map List Tab]
            This tab allows the user to manage map-related activities on their server.
            Such activities include: Changing the game-mode, restarting the round/map,
            advancing to the next round/map, and managing the map list.
            -->
            <TabItem Name="tabitem_MapList">
                <Grid Name="grid_MapList">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="3" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="3" />
                        <RowDefinition Height=".5*" />
                        <RowDefinition Height="3" />
                        <RowDefinition Height=".5*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".5*" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width=".5*" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Game Mode Filter -->
                    <DockPanel Name="grid_GameMode"
                               Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1">
                        <Label Name="label_GameMode"
                               DockPanel.Dock="Left"
                               Margin="0, 0, 3, 0" VerticalContentAlignment="Center"
                               Style="{StaticResource style_LabelSubHeader}" />
                        <Button Name="button_GameMode"
                                DockPanel.Dock="Right"
                                Margin="3, 0, 0, 0" Content="{StaticResource Apply}"
                                Visibility="Collapsed"
                                Click="Button_Clicked" />
                        <ComboBox Name="combobox_GameMode"
                                  ItemTemplate="{StaticResource GameModeTemplate}"
                                  ItemsSource="{Binding Path=GameState.GameModePool}"
                                  SelectedItem="{Binding ElementName=game_Root, Path=GameModeFilter,
                                                         Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </DockPanel>
                    <!-- Map Functions -->
                    <StackPanel Name="stackpanel_MapListFunctions"
                                Grid.Row="0" Grid.RowSpan="1" Grid.Column="4" Grid.ColumnSpan="1"
                                Orientation="Horizontal">
                        <Label Name="label_MapListFunctions"
                               Style="{StaticResource style_LabelSubHeader}"
                               Margin="0, 0, 3, 0" VerticalAlignment="Center" />
                        <Button Name="button_RestartRound"
                                Margin="0, 0, 3, 0" Content="{StaticResource RestartRound}"
                                Click="Button_Clicked" />
                        <Button Name="button_NextRound"
                                Margin="0, 0, 3, 0" Content="{StaticResource NextRound}"
                                Click="Button_Clicked" />
                        <Button Name="button_RestartMap"
                                Margin="0, 0, 3, 0" Content="{StaticResource RestartMap}"
                                Click="Button_Clicked" />
                        <Button Name="button_NextMap"
                                Margin="0, 0, 3, 0" Content="{StaticResource NextMap}"
                                Click="Button_Clicked" />
                    </StackPanel>

                    <!-- Map Pool/List Management -->
                    <Label Name="label_MapPool"
                           Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                           Style="{StaticResource style_LabelSubHeader}" />
                    <Label Name="label_MapList"
                           Grid.Row="2" Grid.RowSpan="1" Grid.Column="4" Grid.ColumnSpan="3"
                           Style="{StaticResource style_LabelSubHeader}" />
                    
                    <ListBox Name="listbox_MapPool"
                             Grid.Row="4" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="1"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             SelectionMode="Extended" Grid.IsSharedSizeScope="True"
                             ItemTemplate="{StaticResource MapPoolTemplate}"
                             ItemsSource="{Binding Source={StaticResource cvs_MapPool}}" />
                    <ListBox Name="listbox_MapList"
                             Grid.Row="4" Grid.RowSpan="3" Grid.Column="4" Grid.ColumnSpan="1"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             SelectionMode="Extended" Grid.IsSharedSizeScope="True"
                             ItemTemplate="{StaticResource MapListTemplate}"
                             ItemsSource="{Binding Source={StaticResource cvs_MapList}}" />

                    <!-- Manage the Map List -->
                    <StackPanel Name="stackpanel_MapList"
                                Grid.Row="4" Grid.RowSpan="3" Grid.Column="2" Grid.ColumnSpan="1"
                                VerticalAlignment="Center">
                        <Button Name="button_AddToMapList"
                                Margin="0, 0, 0, 3" Content="{StaticResource MoveRight}"
                                Click="Button_Clicked" />
                        <Button Name="button_RemoveFromMapList"
                                Margin="0, 0, 0, 3" Content="{StaticResource MoveLeft}"
                                Click="Button_Clicked" />
                    </StackPanel>

                    <!-- Sort the Map List -->
                    <Button Name="button_MapListUp"
                            Grid.Row="4" Grid.RowSpan="1" Grid.Column="6" Grid.ColumnSpan="1"
                            Content="{StaticResource MoveUp}" Click="Button_Clicked" />
                    <Button Name="button_MapListDown"
                            Grid.Row="6" Grid.RowSpan="1" Grid.Column="6" Grid.ColumnSpan="1"
                            Content="{StaticResource MoveDown}" Click="Button_Clicked" />
                </Grid>
            </TabItem>
            <!--
            [Ban List Tab]
            This tab allows the user to manage ban-related activities on their server.
            Such activities include: .
            -->
            <TabItem Name="tabitem_BanList">
                <Grid Name="grid_BanList">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="3" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    
                    <Label Name="label_BanListFilter"
                           Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                    <ComboBox Name="combobox_BanListFilter"
                              Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                              SelectedItem="{Binding ElementName=game_Root, Path=BanFilterType,
                                                     Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Name="textbox_BanListFilter"
                             Grid.Row="0" Grid.RowSpan="1" Grid.Column="4" Grid.ColumnSpan="1"
                             Text="{Binding ElementName=game_Root, Path=BanFilterText,
                                            Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    
                    <DataGrid Name="datagrid_BanList"
                              Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="5"
                              ContextMenu="{StaticResource BanListContextMenu}"
                              ItemsSource="{Binding Source={StaticResource cvs_BanList}}">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="datagrid_BanListUidColumn"
                                                Binding="{Binding Path=Target.Uid}" />
                            <DataGridTextColumn x:Name="datagrid_BanListNameColumn"
                                                Binding="{Binding Path=Target.Name}" />
                            <DataGridTextColumn x:Name="datagrid_BanListTypeColumn"
                                                Binding="{Binding Path=Time.Context}" />
                            <DataGridTextColumn x:Name="datagrid_BanListTimeColumn"
                                                Binding="{Binding Path=Time.Length}" />
                            <DataGridTextColumn x:Name="datagrid_BanListReasonColumn"
                                                Binding="{Binding Path=Reason}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <!--
            [Server Information Tab]
            This tab allows the user to manage server-related information of their server.
            Such information include: .
            -->
            <TabItem Name="tabitem_ServerInfo">
                <WrapPanel Name="wrappanel_ServerInfo">
                    
                    <GroupBox Name="groupbox_ServerInfoDetails"
                              Header="Details">
                        <Grid Name="grid_ServerInfoDetails">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            
                            <Label Name="label_ServerName"
                                   Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_ServerDescription"
                                   Grid.Row="4" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_ServerBannerUrl"
                                   Grid.Row="8" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            
                            <TextBox Name="textbox_ServerName"
                                     Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                     Text="{Binding ElementName=game_Root, Path=ServerName}" />
                            <TextBox Name="textbox_ServerDescription"
                                     Grid.Row="6" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                     Text="{Binding ElementName=game_Root, Path=ServerDescription}" />
                            <TextBox Name="textbox_ServerBannerUrl"
                                     Grid.Row="10" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                     Text="{Binding ElementName=game_Root, Path=ServerBannerUrl}" />
                        </Grid>
                    </GroupBox>
                    <GroupBox Name="groupbox_ServerInfoConfiguration"
                              Header="Configuration">
                        <Grid Name="grid_ServerInfoConfiguration">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <CheckBox Name="checkbox_ServerPunkbuster"
                                      Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                                      IsChecked="{Binding ElementName=game_Root, Path=ServerPunkbuster}" />
                            <CheckBox Name="checkbox_ServerRanked"
                                      Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                                      IsChecked="{Binding ElementName=game_Root, Path=ServerRanked}" />
                            <CheckBox Name="checkbox_ServerProfanityFilter"
                                      Grid.Row="4" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                                      IsChecked="{Binding ElementName=game_Root, Path=ServerProfanityFilter}" />
                            <CheckBox Name="checkbox_ServerIdleKick"
                                      Grid.Row="6" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                      IsChecked="{Binding ElementName=game_Root, Path=ServerIdleKick}" />

                            <TextBox Name="textbox_ServerIdleKick"
                                     Grid.Row="6" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                     IsEnabled="{Binding ElementName=checkbox_ServerIdleKick, Path=IsChecked}"
                                     Text="{Binding ElementName=game_Root, Path=ServerIdleKickTimeout}" />
                            
                                     
                        </Grid>
                    </GroupBox>
                    <GroupBox Name="groupbox_ServerInfoGamePlay"
                              Header="Game Play">
                        <Label Content="Stuff" />
                    </GroupBox>
                    <GroupBox Name="groupbox_ServerInfoChatModeration"
                              Header="Chat Moderation">
                        <Label Content="Stuff" />
                    </GroupBox>
                    <GroupBox Name="groupbox_ServerInfoTeamKilling"
                              Header="Team Killing">
                        <Label Content="Stuff" />
                    </GroupBox>
                    <GroupBox Name="groupbox_ServerInfoLevelVariables"
                              Header="Level Variables">
                        <Label Content="Stuff" />
                    </GroupBox>
                    <GroupBox Name="groupbox_ServerInfoConfigGenerator"
                              Header="Config Generator">
                        <Label Content="Stuff" />
                    </GroupBox>
                </WrapPanel>
            </TabItem>
        </TabControl>

        
        <!-- Divides the tab control and chat box. -->
        <GridSplitter Name="gridsplitter_Divider"
                      Grid.Row="3" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1" 
                      HorizontalAlignment="Stretch" Background="Transparent" />

        
        <!--
        [Chat/Event Box]
        This allows the user to see what the players are saying (via chat) in game.
        This box (will eventually) also display events, such as when a player dies,
        picks up a weapon, spawns, kills someone, etc.  All of the items in the
        window can be turned off/on at any time via the "More Filters" button.
        -->
        <Border Name="border_ChatBox"
                Grid.Row="4" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                Background="#F9F9F9" CornerRadius="4, 4, 0, 0">
            <Grid Name="grid_ChatBox">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3" />
                    <RowDefinition Height="Auto" /> <!-- Title/Filter-->
                    <RowDefinition Height="3" />
                    <RowDefinition Height="*" />    <!-- Chat Box -->
                    <RowDefinition Height="3" />
                    <RowDefinition Height="Auto" /> <!-- Server Chat -->
                    <RowDefinition Height="3" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="Auto" /> <!-- Title -->
                    <ColumnDefinition Width="50*" />  
                    <ColumnDefinition Width="Auto" /> <!-- Filter Title -->
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="Auto" /> <!-- Filter Type -->
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="Auto" /> <!-- Filter Method -->
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="50*" />  <!-- Filter Textbox -->
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="Auto" /> <!-- More Filters -->
                    <ColumnDefinition Width="3" />
                </Grid.ColumnDefinitions>
            
                <!--
                Allows the user to filter the chatbox.
                -->
                <Label Name="label_ChatBoxTitle"
                       Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                       Padding="0" Foreground="Blue"  FontSize="11" FontWeight="Bold"
                       VerticalContentAlignment="Center" />
                <Label Name="label_ChatBoxFilter"
                       Grid.Row="1" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="1"
                       Padding="0" VerticalContentAlignment="Center" />
                <ComboBox Name="combobox_ChatBoxFilterType"
                          Grid.Row="1" Grid.RowSpan="1" Grid.Column="5" Grid.ColumnSpan="1"
                          ItemTemplate="{StaticResource EnumTemplate}"
                          SelectedItem="{Binding ElementName=game_Root, Path=ChatFilterType,
                                                 Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <ComboBox Name="combobox_ChatBoxFilterMethod"
                          Grid.Row="1" Grid.RowSpan="1" Grid.Column="7" Grid.ColumnSpan="1"
                          ItemTemplate="{StaticResource EnumTemplate}"
                          SelectedItem="{Binding ElementName=game_Root, Path=ChatFilterMethod,
                                                 Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox Name="textbox_ChatBoxFilter"
                         Grid.Row="1" Grid.RowSpan="1" Grid.Column="9" Grid.ColumnSpan="1"
                         Text="{Binding ElementName=game_Root, Path=ChatFilterText,
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Button Name="button_ChatBoxFilter"
                        Grid.Row="1" Grid.RowSpan="1" Grid.Column="11" Grid.ColumnSpan="1"
                        Click="Button_Clicked" Visibility="Collapsed"/>
                
                <!--
                The Chatbox.
                -->
                <ListBox Name="listbox_ChatBox"
                         Grid.Row="3" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="11"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ItemTemplate="{StaticResource ChatBoxTemplate}" Grid.IsSharedSizeScope="True"
                         ItemsSource="{Binding Source={StaticResource cvs_ChatMessages}}" />

                <!--
                Allows the user to send chat messages to the server/teams/squads/players.
                -->
                <Grid Name="grid_ChatBoxSend"
                      Grid.Row="5" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="11"
                      Grid.IsSharedSizeScope="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="Auto" MinWidth="50" SharedSizeGroup="Subset" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition SharedSizeGroup="Subset" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Send Type -->
                    <ComboBox Name="combobox_ChatBoxSendType"
                              Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                              ItemTemplate="{StaticResource EnumTemplate}" />
                    <Label Name="label_ChatBoxSendMsg"
                           Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                           Padding="0" VerticalContentAlignment="Center" />
                    <TextBox Name="textbox_ChatBoxSendMsg"
                             Grid.Row="0" Grid.RowSpan="1" Grid.Column="4" Grid.ColumnSpan="1"
                             MaxLength="100" KeyDown="TextBox_KeyPressed" />
                    
                    <!-- Send To -->
                    <Label Name="label_ChatBoxSendTo"
                           Grid.Row="0" Grid.RowSpan="1" Grid.Column="6" Grid.ColumnSpan="1"
                           Padding="0" VerticalContentAlignment="Center" />
                    <ComboBox Name="combobox_ChatBoxSendTo"
                              Grid.Row="0" Grid.RowSpan="1" Grid.Column="8" Grid.ColumnSpan="1"
                              ItemTemplate="{StaticResource EnumTemplate}"
                              SelectionChanged="Subset_Selected" />
                    <ComboBox Name="combobox_ChatBoxSendToSubset"
                              Grid.Row="0" Grid.RowSpan="1" Grid.Column="10" Grid.ColumnSpan="1"
                              ItemTemplate="{StaticResource EnumTemplate}" />
                    
                    <!-- Send Button -->
                    <Button Name="button_ChatBoxSend"
                            Grid.Row="0" Grid.RowSpan="1" Grid.Column="12" Grid.ColumnSpan="1"
                            Click="Button_Clicked"/>
                </Grid>

            </Grid>
        </Border>


        <!--
        [Status Bar]
        This displays server information at a glance.  The user can right-click
        on it to choose which items to display.
        -->
        <StatusBar Name="statusbar_ServerInfo"
                   Grid.Row="6" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                   ItemTemplate="{StaticResource StatusBarTemplate}"
                   ItemsSource="{Binding Path=GameState.Vars}" />
        
        
        <!--
        [Popups]
        The following controls, when opened, dim the entire window and
        allow the user to enter additional information when performing some
        action.  The windows generally close whenever the user is done with
        the action or when the user clicks outside the window.
        -->

        <!-- Move Player -->
        <Popup Name="popup_pMove"
               Placement="Center" PopupAnimation="Fade" AllowsTransparency="True" StaysOpen="False">
            <Grid Name="grid_pMove"
                  Width="{Binding ElementName=grid_Main, Path=ActualWidth}"
                  Height="{Binding ElementName=grid_Main, Path=ActualHeight}"
                  Background="{StaticResource PopupBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--
                The content in the middle of the screen.
                -->
                <Border Name="border_pMove"
                        Grid.Row="1" Grid.Column="1"
                        CornerRadius="4" Background="{StaticResource ControlBackgroundBrush}">
                    <Grid Name="grid2_pMove">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>

                        <!--
                        This is affectively the title of the popup along with a description
                        of what the user needs to do to complete the action of this popup.
                        -->
                        <Label Name="label_pMoveTitle"
                               Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                               Style="{StaticResource style_LabelTopHeader}" />
                        <TextBlock Name="textblock_pMoveMessage"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                   Style="{StaticResource style_TextBlockSubHeader}"
                                   MaxWidth="{Binding ElementName=grid_Main, Path=ActualWidth,
                                              Converter={StaticResource reduceTo}, ConverterParameter=0.75}" />
                        <Grid Name="grid3_pMove"
                              Grid.Row="4" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--
                            The labels to move a player. These simply are headers for the following input
                            controls below.
                            -->
                            <Label Name="label_pMoveToTeam"
                                   Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pMoveToSquad"
                                   Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />

                            <!--
                            This is the input portion for moving a player.  The Duration Type, Duration,
                            and Reason are all required.
                            -->
                            <ComboBox Name="combobox_pMoveToTeam"
                                      Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                      ItemsSource="{Binding ElementName=game_Root, Path=Teams}"
                                      ItemTemplate="{StaticResource EnumTemplate}"
                                      KeyDown="TextBox_KeyPressed" />
                            <ComboBox Name="combobox_pMoveToSquad"
                                      Grid.Row="1" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                      ItemsSource="{Binding ElementName=game_Root, Path=Squads}"
                                      ItemTemplate="{StaticResource EnumTemplate}"
                                      KeyDown="TextBox_KeyPressed" />

                        </Grid>

                        <!--
                        Clicking ok will signal the code behind to check the user's input, and if all is well,
                        kick the selected players with the specified message.  Some input validation is in
                        the code behind (it checks for blanks).  Both actions (upon success) will close the
                        popup.
                        -->
                        <Button Name="button_pMoveOk"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                        <Button Name="button_pMoveCancel"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                    </Grid>
                </Border>
                <!-- End Content -->
            </Grid>
        </Popup>
        <!-- Warn Player -->
        <Popup Name="popup_pWarn"
               Placement="Center" PopupAnimation="Fade" AllowsTransparency="True" StaysOpen="False">
            <Grid Name="grid_pWarn"
                  Width="{Binding ElementName=grid_Main, Path=ActualWidth}"
                  Height="{Binding ElementName=grid_Main, Path=ActualHeight}"
                  Background="{StaticResource PopupBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--
                The content in the middle of the screen.
                -->
                <Border Name="border_pWarn"
                        Grid.Row="1" Grid.Column="1"
                        CornerRadius="4" Background="{StaticResource ControlBackgroundBrush}">
                    <Grid Name="grid2_pWarn">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>

                        <!--
                        This is affectively the title of the popup along with a description
                        of what the user needs to do to complete the action of this popup.
                        -->
                        <Label Name="label_pWarnTitle"
                               Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                               Style="{StaticResource style_LabelTopHeader}" />
                        <TextBlock Name="textblock_pWarnMessage"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                   Style="{StaticResource style_TextBlockSubHeader}"
                                   MaxWidth="{Binding ElementName=grid_Main, Path=ActualWidth,
                                              Converter={StaticResource reduceTo}, ConverterParameter=0.75}" />

                        <!--
                        The warn control has no headers for the single textbox on the page.
                        Instead, the message tells the user what they should enter into the textbox.
                        -->
                        <TextBox Name="textbox_pWarnReason"
                                 Grid.Row="4" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                 KeyDown="TextBox_KeyPressed" />

                        <!--
                        Clicking ok will signal the code behind to check the user's input, and if all is well,
                        yell at the selected players with the specified message.  Some input validation is in
                        the code behind (it checks for blanks).  Both actions (upon success) will close the
                        popup.
                        -->
                        <Button Name="button_pWarnOk"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                        <Button Name="button_pWarnCancel"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />

                        <!--
                        These popup controls' visibility is managed in the code behind whenever
                        the ok button (or when the user presses enter on the last textbox) to pop-up
                        beside their respective controls containing a message on what the user did wrong.
                        -->
                        <Popup Name="popup_pWarnReason"
                               Placement="Right" PlacementTarget="{Binding ElementName=textbox_pWarnReason}">
                            <TextBox Name="textbox_pWarnReasonPopup"
                                     IsHitTestVisible="False" IsReadOnly="True" />
                        </Popup>
                    </Grid>
                </Border>
                <!-- End Content -->
            </Grid>
        </Popup>
        <!-- Kick Player -->
        <Popup Name="popup_pKick"
               Placement="Center" PopupAnimation="Fade" AllowsTransparency="True" StaysOpen="False">
            <Grid Name="grid_pKick"
                  Width="{Binding ElementName=grid_Main, Path=ActualWidth}"
                  Height="{Binding ElementName=grid_Main, Path=ActualHeight}"
                  Background="{StaticResource PopupBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--
                The content in the middle of the screen.
                -->
                <Border Name="border_pKick"
                        Grid.Row="1" Grid.Column="1"
                        CornerRadius="4" Background="{StaticResource ControlBackgroundBrush}">
                    <Grid Name="grid2_pKick">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>

                        <!--
                        This is affectively the title of the popup along with a description
                        of what the user needs to do to complete the action of this popup.
                        -->
                        <Label Name="label_pKickTitle"
                               Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                               Style="{StaticResource style_LabelTopHeader}" />
                        <TextBlock Name="textblock_pKickMessage"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                   Style="{StaticResource style_TextBlockSubHeader}"
                                   MaxWidth="{Binding ElementName=grid_Main, Path=ActualWidth,
                                              Converter={StaticResource reduceTo}, ConverterParameter=0.75}" />

                        <!--
                        The kick control has no headers for the single textbox on the page.
                        Instead, the message tells the user what they should enter into the textbox.
                        -->
                        <TextBox Name="textbox_pKickReason"
                                 Grid.Row="4" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                 KeyDown="TextBox_KeyPressed" />

                        <!--
                        Clicking ok will signal the code behind to check the user's input, and if all is well,
                        kick the selected players with the specified message.  Some input validation is in
                        the code behind (it checks for blanks).  Both actions (upon success) will close the
                        popup.
                        -->
                        <Button Name="button_pKickOk"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                        <Button Name="button_pKickCancel"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />

                        <!--
                        These popup controls' visibility is managed in the code behind whenever
                        the ok button (or when the user presses enter on the last textbox) to pop-up
                        beside their respective controls containing a message on what the user did wrong.
                        -->
                        <Popup Name="popup_pKickReason"
                               Placement="Right" PlacementTarget="{Binding ElementName=textbox_pKickReason}">
                            <TextBox Name="textbox_pKickReasonPopup"
                                     IsHitTestVisible="False" IsReadOnly="True" />
                        </Popup>
                    </Grid>
                </Border>
                <!-- End Content -->
            </Grid>
        </Popup>
        <!-- Ban Player -->
        <Popup Name="popup_pBan"
               Placement="Center" PopupAnimation="Fade" AllowsTransparency="True" StaysOpen="False">
            <Grid Name="grid_pBan"
                  Width="{Binding ElementName=grid_Main, Path=ActualWidth}"
                  Height="{Binding ElementName=grid_Main, Path=ActualHeight}"
                  Background="{StaticResource PopupBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--
                The content in the middle of the screen.
                -->
                <Border Name="border_pBan"
                        Grid.Row="1" Grid.Column="1"
                        CornerRadius="4" Background="{StaticResource ControlBackgroundBrush}">
                    <Grid Name="grid2_pBan">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>

                        <!--
                        This is affectively the title of the popup along with a description
                        of what the user needs to do to complete the action of this popup.
                        -->
                        <Label Name="label_pBanTitle"
                               Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                               Style="{StaticResource style_LabelTopHeader}" />
                        <TextBlock Name="textblock_pBanMessage"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                   Style="{StaticResource style_TextBlockSubHeader}"
                                   MaxWidth="{Binding ElementName=grid_Main, Path=ActualWidth,
                                              Converter={StaticResource reduceTo}, ConverterParameter=0.75}" />
                        <Grid Name="grid3_pBan"
                              Grid.Row="4" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--
                            The labels for a ban. These simply are headers for the following input
                            controls below.
                            -->
                            <Label Name="label_pBanDurType"
                                   Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pBanDur"
                                   Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                   Visibility="{Binding ElementName=combobox_pBanDurType, Path=SelectedItem,
                                                Converter={StaticResource isTempBanConv}}" />
                            <Label Name="label_pBanReason"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />

                            <!--
                            This is the input portion for a ban.  The Duration Type, Duration, and Reason
                            are all required.
                            -->
                            <ComboBox Name="combobox_pBanDurType"
                                      Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                      ItemTemplate="{StaticResource EnumTemplate}" />
                            <TextBox Name="textbox_pBanDur"
                                     Grid.Row="1" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                     Visibility="{Binding ElementName=label_pBanDur, Path=Visibility}" 
                                     KeyDown="TextBox_KeyPressed" />
                            <TextBox Name="textbox_pBanReason"
                                     Grid.Row="2" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" />

                            <!--
                            These popup controls' visibility is managed in the code behind whenever
                            the ok button (or when the user presses enter on the last textbox) to pop-up
                            beside their respective controls containing a message on what the user did wrong.
                            -->
                            <Popup Name="popup_pBanDur"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pBanDur}">
                                <TextBox Name="textbox_pBanDurPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            <Popup Name="popup_pBanReason"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pBanReason}">
                                <TextBox Name="textbox_pBanReasonPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>

                        </Grid>

                        <!--
                        Clicking ok will signal the code behind to check the user's input, and if all is well,
                        kick the selected players with the specified message.  Some input validation is in
                        the code behind (it checks for blanks).  Both actions (upon success) will close the
                        popup.
                        -->
                        <Button Name="button_pBanOk"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                        <Button Name="button_pBanCancel"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                    </Grid>
                </Border>
                <!-- End Content -->
            </Grid>
        </Popup>


    </Grid>
</Window>
