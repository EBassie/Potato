<!--
// Copyright 2011 Cameron 'Imisnew2' Gunnin
// 
// http://www.phogue.net
//  
// This file is part of Procon 2.
// 
// Procon 2 is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Procon 2 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Procon 2.  If not, see<http://www.gnu.org/licenses/> .
-->

<Window x:Class="Procon.UI.Old.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Name="window_Root"
        Title="Procon 2" Icon="../Images/procon2.ico" Background="#0F1B29"
        Height="400" MinHeight="400" Width="600" MinWidth="600" Closing="Closing_Procon">
    <Window.Resources>
        <!-- Resources -->
        <CollectionViewSource x:Key="cvs_Interfaces"     Source="{Binding Path=Interfaces}" />
        <CollectionViewSource x:Key="cvs_Connections"    Source="{Binding ElementName=combobox_Interfaces, Path=SelectedItem.Connections}" />
        <CollectionViewSource x:Key="cvs_ConnectionInfo" Source="{Binding ElementName=listbox_Connections, Path=SelectedItem.GameState.Vars}" Filter="ConnectionInfo_Filter" />
        <CollectionViewSource x:Key="cvs_Groups"         Source="{Binding ElementName=combobox_Interfaces, Path=SelectedItem.Security.Groups}" />
        <CollectionViewSource x:Key="cvs_GroupInfo"      Source="{Binding ElementName=listbox_Groups,      Path=SelectedItem.Permissions}"    Filter="GroupInfo_Filter" />
        <CollectionViewSource x:Key="cvs_Accounts"       Source="{Binding ElementName=combobox_Interfaces, Path=SelectedItem.Security.Accounts}" />
        <CollectionViewSource x:Key="cvs_AccountInfo"    Source="{Binding ElementName=listbox_Accounts,    Path=SelectedItem.Assignments}"    Filter="AccountInfo_Filter" />
        <CollectionViewSource x:Key="cvs_Packages"       Source="{Binding ElementName=combobox_Interfaces, Path=SelectedItem.Packages.Packages}" />
    </Window.Resources>
    
    <!-- Entire Window -->
    <Grid Name="grid_Main">
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />    <!-- Interfaces Combobox -->
            <RowDefinition Height="75" />    <!-- Procon Logo -->
            <RowDefinition Height="*" />     <!-- Content -->
            <RowDefinition Height="15" />    <!-- Padding -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15" /> <!-- Padding -->
            <ColumnDefinition Width="*" />  <!-- Content -->
            <ColumnDefinition Width="15" /> <!-- Padding -->
        </Grid.ColumnDefinitions>
        
        
        <!-- Procon 2 Logo -->
        <Image Name="image_ProconLogo"
               Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3"
               HorizontalAlignment="Left" VerticalAlignment="Top"
               Margin="15, 0, 0, 0" Width="500"
               Source="{StaticResource ProconLogoSource}" />

        
        <!-- Interfaces -->
        <ComboBox Name="combobox_Interfaces"
                  Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                  ItemTemplate="{StaticResource InterfacesTemplate}"
                  ItemsSource="{Binding Source={StaticResource cvs_Interfaces}}" />
        <!-- Interface Buttons -->
        <StackPanel Name="stackpanel_InterfaceButtons"
                    Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                    HorizontalAlignment="Right" VerticalAlignment="Center"
                    Margin="0, 0, 25, 0" Orientation="Horizontal">
            <ToggleButton Name="togglebutton_AddInterface"
                          Content="{StaticResource AddInter}"
                          Click="Button_Clicked" />
            <Button Name="button_RemoveInterface"
                    Style="{StaticResource style_RemoveInterfaceButton}"
                    Content="{StaticResource RemoveInter}"
                    Click="Button_Clicked" />
        </StackPanel>

        
        <!-- Interface Dependent Controls -->
        <TabControl Name="tabcontrol_Content"
                    Grid.Row="2" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1">
            <!--
            Connections
            -->
            <TabItem Name="tabitem_Connections">
                <Grid Name="grid_Connections">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="3" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="150" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ListBox Name="listbox_Connections"
                             Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ItemTemplate="{StaticResource ConnectionsTemplate}"
                             ItemsSource="{Binding Source={StaticResource cvs_Connections}}"/>
                    <ListBox Name="listbox_ConnectionInfo"
                             Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.IsSharedSizeScope="True"
                             ItemTemplate="{StaticResource ConnectionInfoTemplate}"
                             ItemsSource="{Binding Source={StaticResource cvs_ConnectionInfo}}"/>

                    <!-- Buttons -->
                    <StackPanel Name="stackpanel_ConnectionButtons"
                                Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                                Orientation="Horizontal">
                        <ToggleButton Name="togglebutton_AddConnection"
                                      Padding="3, 0" Margin="0, 0, 3, 0"
                                      Content="{StaticResource AddConn}"
                                      Click="Button_Clicked" />
                        <ToggleButton Name="togglebutton_EditConnection"
                                      Style="{StaticResource style_EditConnectionToggleButton}"
                                      Content="{StaticResource EditConn}"
                                      Click="Button_Clicked" IsEnabled="False" />
                        <Button Name="button_RemoveConnection"
                                Style="{StaticResource style_RemoveConnectionButton}"
                                Content="{StaticResource RemoveConn}"
                                Click="Button_Clicked" />
                        <Button Name="button_ViewConnection"
                                Style="{StaticResource style_ViewConnectionButton}"
                                Content="{StaticResource ViewConn}"
                                Click="Button_Clicked" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <!--
            Groups
            -->
            <TabItem Name="tabitem_Groups">
                <Grid Name="grid_Groups">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="3" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="150" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ListBox Name="listbox_Groups"
                             Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ItemTemplate="{StaticResource GroupsTemplate}"
                             ItemsSource="{Binding Source={StaticResource cvs_Groups}}"/>
                    <ListBox Name="listbox_GroupInfo"
                             Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.IsSharedSizeScope="True"
                             ItemTemplate="{StaticResource GroupInfoTemplate}"
                             ItemsSource="{Binding Source={StaticResource cvs_GroupInfo}}"/>

                    <!-- Buttons -->
                    <StackPanel Name="stackpanel_GroupButtons"
                                Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                                Orientation="Horizontal">
                        <ToggleButton Name="togglebutton_AddGroup"
                                      Padding="3, 0" Margin="0, 0, 3, 0"
                                      Content="{StaticResource AddGroup}"
                                      Click="Button_Clicked" />
                        <ToggleButton Name="togglebutton_EditGroup"
                                      Style="{StaticResource style_EditGroupToggleButton}"
                                      Content="{StaticResource EditGroup}"
                                      Click="Button_Clicked" IsEnabled="False" />
                        <Button Name="button_RemoveGroup"
                                      Style="{StaticResource style_RemoveGroupButton}"
                                      Content="{StaticResource RemoveGroup}"
                                      Click="Button_Clicked" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <!--
            Accounts
            -->
            <TabItem Name="tabitem_Accounts">
                <Grid Name="grid_Accounts">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="3" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="150" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ListBox Name="listbox_Accounts"
                             Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ItemTemplate="{StaticResource AccountsTemplate}"
                             ItemsSource="{Binding Source={StaticResource cvs_Accounts}}"/>
                    <ListBox Name="listbox_AccountInfo"
                             Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.IsSharedSizeScope="True"
                             ItemTemplate="{StaticResource AccountInfoTemplate}"
                             ItemsSource="{Binding Source={StaticResource cvs_AccountInfo}}"/>

                    <!-- Buttons -->
                    <StackPanel Name="stackpanel_AccountButtons"
                                Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                                Orientation="Horizontal">
                        <ToggleButton Name="togglebutton_AddAccount"
                                      Padding="3, 0" Margin="0, 0, 3, 0"
                                      Content="{StaticResource AddAccount}"
                                      Click="Button_Clicked" />
                        <ToggleButton Name="togglebutton_EditAccount"
                                      Style="{StaticResource style_EditAccountToggleButton}"
                                      Content="{StaticResource EditAccount}"
                                      Click="Button_Clicked" IsEnabled="False" />
                        <Button Name="button_RemoveAccount"
                                Style="{StaticResource style_RemoveAccountButton}"
                                Content="{StaticResource RemoveAccount}"
                                Click="Button_Clicked" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <!--
            Packages
            -->
            <TabItem Name="tabitem_Packages">
                <Grid Name="grid_Packages">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="3" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="150" />
                        <ColumnDefinition Width="3" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ListBox Name="listbox_Packages"
                             Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                             ItemTemplate="{StaticResource PackagesTemplate}"
                             ItemsSource="{Binding Source={StaticResource cvs_Packages}}"/>
                    <Grid Name="grid_PackageInfo"
                          Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                          DataContext="{Binding ElementName=listbox_Packages, Path=SelectedItem}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" /> <!-- Image Name/Version -->
                            <RowDefinition Height="Auto" /> <!-- Image Author / Discussion -->
                            <RowDefinition Height="Auto" /> <!-- Image -->
                            <RowDefinition Height="3" />
                            <RowDefinition Height="*" />    <!-- Misc Info -->
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- Image -->
                        <Label Name="label_PackageImage"
                               Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="1"
                               Background="White" BorderBrush="Black" BorderThickness="1"
                               Padding="0" Height="66" Width="66">
                            <Image Name="image_Image" Source="{Binding Path=Image}" />
                        </Label>
                        <!-- Name and Version -->
                        <StackPanel Name="stackpanel_PackageNameAndVersion"
                                    Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                    Orientation="Horizontal" HorizontalAlignment="Left">
                            <Label Name="label_PackageName"
                                   Style="{StaticResource style_LabelTopHeader}" FontSize="14"
                                   Content="{Binding Path=Name, FallbackValue=Name}" />
                            <Label Name="label_PackageDash"
                                   Style="{StaticResource style_LabelTopHeader}" FontSize="14"
                                   Content="-" />
                            <Label Name="label_PackageVersion"
                                   Style="{StaticResource style_LabelTopHeader}" FontSize="14"
                                   Content="{Binding Path=Version, FallbackValue=Version}"/>
                        </StackPanel>
                        <!-- Author And Discussion -->
                        <Grid Name="grid_PackageAuthorAndDiscussion"
                              Grid.Row="1" Grid.RowSpan="2" Grid.Column="2" Grid.ColumnSpan="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" /> <!-- Author -->
                                <RowDefinition Height="Auto" /> <!-- Discussion -->
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" /> <!-- Title -->
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="*" />    <!-- Content -->
                            </Grid.ColumnDefinitions>

                            <!-- Author -->
                            <Label Name="label_PackageAuthor"
                                   Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                   Style="{StaticResource style_LabelSubHeader}" />
                            <Label Name="label_PackageAuthorLink"
                                   Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1">
                                <Hyperlink Name="hyperlink_PackageAuthorURI"
                                           NavigateUri="{Binding Path=Website}" RequestNavigate="Web_Request" TextDecorations="None">
                                    <Label Name="label_PackageAuthorLinkText" Foreground="Blue" Content="{Binding Path=Author}" />
                                </Hyperlink>
                            </Label>

                            <!-- Discussion -->
                            <Label Name="label_PackageDiscussion" 
                                   Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                   Style="{StaticResource style_LabelSubHeader}" />
                            <Label Name="label_PackageDiscussionLink"
                                   Grid.Row="1" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1">
                                <Hyperlink Name="hyperlink_PackageDiscussionURI"
                                           NavigateUri="{Binding Path=ForumLink}" RequestNavigate="Web_Request" TextDecorations="None">
                                    <Label Name="label_PackageDiscussionLinkText" Foreground="Blue" />
                                </Hyperlink>
                            </Label>
                        </Grid>

                        <!-- Misc Info -->
                        <ScrollViewer Name="scrollviewer_PackageMiscInfo"
                                      Grid.Row="4" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                                      HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
                            <Grid Name="grid_PackageMiscInfo">
                                <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" /> <!-- Description -->
                                <RowDefinition Height="Auto" /> <!-- Description Overflow -->
                                <RowDefinition Height="Auto" /> <!-- Downloads -->
                                <RowDefinition Height="Auto" /> <!-- Downloads Overflow-->
                                <RowDefinition Height="Auto" /> <!-- Last Modified -->
                                <RowDefinition Height="Auto" /> <!-- Last Modified Overflow -->
                                <RowDefinition Height="Auto" /> <!-- File Size -->
                                <RowDefinition Height="Auto" /> <!-- File Size Overflow -->
                            </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" /> <!-- Labels -->
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="*" /> <!-- Info -->
                            </Grid.ColumnDefinitions>

                                <!-- Description -->
                                <Label Name="label_PackageDescription"
                                       Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                       Style="{StaticResource style_LabelSubHeader}" />
                                <TextBlock Name="textblock_PackageDescriptionText"
                                           Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Grid.ColumnSpan="1"
                                           TextWrapping="Wrap" Text="{Binding Path=Description}"/>
                                <!-- Downloads -->
                                <Label Name="label_PackageDownloads"
                                       Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                       Style="{StaticResource style_LabelSubHeader}" />
                                <TextBlock Name="textblock_PackageDownloadsText"
                                           Grid.Row="2" Grid.RowSpan="2" Grid.Column="2" Grid.ColumnSpan="1"
                                           Text="{Binding Path=Downloads}"/>
                                <!-- Last Modified -->
                                <Label Name="label_PackageLastModified"
                                       Grid.Row="4" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                       Style="{StaticResource style_LabelSubHeader}" />
                                <TextBlock Name="textblock_PackageLastModifiedText"
                                           Grid.Row="4" Grid.RowSpan="2" Grid.Column="2" Grid.ColumnSpan="1"
                                           Text="{Binding Path=LastModified}"/>
                                <!-- File Size -->
                                <Label Name="label_PackageSize"
                                       Grid.Row="6" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                       Style="{StaticResource style_LabelSubHeader}" />
                                <TextBlock Name="textblock_PackageSizeText"
                                           Grid.Row="6" Grid.RowSpan="2" Grid.Column="2" Grid.ColumnSpan="1"
                                           Text="{Binding Path=FileSize, StringFormat=\{0:D\} Bytes}"/>

                            </Grid>
                        </ScrollViewer>

                    </Grid>

                    <!-- Buttons -->
                    <Button Name="button_PackageInstall"
                            Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                            Style="{StaticResource style_InstallPackageButton}"
                            Click="Button_Clicked" />
                </Grid>
            </TabItem>
            <!--
            Settings And Layer
            -->
            <TabItem Name="tabitem_SettingsAndLayer">
                <Grid Name="grid_SettingsAndLayer"
                      DataContext="{Binding ElementName=combobox_Interfaces, Path=SelectedItem}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="3" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                    <!-- Normal Settings -->
                    <GroupBox Name="groupbox_Settings"
                              Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                    
                    <!-- Layer Settings -->
                    <GroupBox Name="groupbox_Layer"
                              Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                              Visibility="{Binding Converter={StaticResource isLocalInterVisConv}}" >
                        <Grid Name="grid_Layer">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" /> <!-- Layername -->
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" /> <!-- Ip -->
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" /> <!-- Port -->
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" /> <!-- On/Off Button -->
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" /> <!-- Labels -->
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="*" />    <!-- Textboxes -->
                            </Grid.ColumnDefinitions>

                            <Label Name="label_LayerName"
                                   Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_LayerHost"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                   IsEnabled="{Binding Path=Layer.ConnectionState, Converter={StaticResource isLayerOffConv}}" />
                            <Label Name="label_LayerPort"
                                   Grid.Row="4" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                   IsEnabled="{Binding Path=Layer.ConnectionState, Converter={StaticResource isLayerOffConv}}" />

                            <TextBox Name="textbox_LayerName"
                                     Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                     Text="{Binding ElementName=window_Root, Path=LayerName, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Name="textbox_LayerHost"
                                     Grid.Row="2" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                     IsEnabled="{Binding Path=Layer.ConnectionState, Converter={StaticResource isLayerOffConv}}"
                                     Text="{Binding Path=Layer.Hostname, Mode=TwoWay}" />
                            <TextBox Name="textbox_LayerPort"
                                     Grid.Row="4" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                     IsEnabled="{Binding Path=Layer.ConnectionState, Converter={StaticResource isLayerOffConv}}"
                                     Text="{Binding Path=Layer.Port, Mode=TwoWay}" />

                            <Button Name="button_Layer"
                                    Grid.Row="6" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3"
                                    Content="{Binding Path=Layer.ConnectionState, Converter={StaticResource layerStateConv}}"
                                    HorizontalAlignment="Right" Click="Button_Clicked" />

                            <Popup Name="popup_LayerHost"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_LayerHost}">
                                <TextBox Name="textbox_LayerHostPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            <Popup Name="popup_LayerPort"
                                    Placement="Right" PlacementTarget="{Binding ElementName=textbox_LayerPort}">
                                <TextBox Name="textbox_LayerPortPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>



        <!--
        Add Interface Popup
        This popup's visibility is controlled by the state of the "Add Interface" toggle button.
        The control dims the rest of the window and displays a pop-up in the middle of the screen.
        -->
        <Popup Name="popup_pInterface"
               Placement="Center" PopupAnimation="Fade" AllowsTransparency="True"
               StaysOpen="False" IsOpen="{Binding ElementName=togglebutton_AddInterface, Path=IsChecked}">
            <Grid Name="grid_pInterface"
                  Width="{Binding ElementName=grid_Main, Path=ActualWidth}"
                  Height="{Binding ElementName=grid_Main, Path=ActualHeight}"
                  Background="{StaticResource PopupBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--
                The content in the middle of the screen.
                -->
                <Border Name="border_pInterface"
                        Grid.Row="1" Grid.Column="1"
                        CornerRadius="4" Background="{StaticResource ControlBackgroundBrush}">
                    <Grid Name="grid2_pInterface">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>

                        <!--
                        This is affectively the title of the popup along with a description
                        of what the user needs to do to complete the action of this popup.
                        -->
                        <Label Name="label_pInterfaceTitle"
                               Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                               Style="{StaticResource style_LabelTopHeader}" />
                        <TextBlock Name="textblock_pInterfaceMessage"
                                   Grid.Row="3" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                   Style="{StaticResource style_TextBlockSubHeader}"
                                   MaxWidth="{Binding ElementName=grid_Main, Path=ActualWidth,
                                              Converter={StaticResource reduceTo}, ConverterParameter=0.75}" />
                        <Grid Name="grid3_pInterface"
                              Grid.Row="5" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                              Grid.IsSharedSizeScope="True" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--
                            The labels for an interface.  These simply are headers for the following
                            input controls below.
                            -->
                            <Label Name="label_pInterfaceHost"
                                   Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pInterfacePort"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pInterfaceUser"
                                   Grid.Row="4" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pInterfacePass"
                                   Grid.Row="6" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />

                            <!--
                            This is the input portion for an interface.
                            The IP, Port, Username, and Password are all required.
                            -->
                            <TextBox Name="textbox_pInterfaceHost"
                                     Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" />
                            <TextBox Name="textbox_pInterfacePort"
                                     Grid.Row="2" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" />
                            <TextBox Name="textbox_pInterfaceUser"
                                     Grid.Row="4" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" />
                            <PasswordBox Name="passwordbox_pInterfacePass"
                                         Grid.Row="6" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" 
                                         KeyDown="TextBox_KeyPressed" />

                            <!--
                            These popup controls' visibility is managed in the code behind whenever
                            the ok button (or when the user presses enter on the last textbox) to pop-up
                            beside their respective controls containing a message on what the user did wrong.
                            -->
                            <Popup Name="popup_pInterfaceHost"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pInterfaceHost}">
                                <TextBox Name="textbox_pInterfaceHostPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            <Popup Name="popup_pInterfacePort"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pInterfacePort}">
                                <TextBox Name="textbox_pInterfacePortPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            <Popup Name="popup_pInterfaceUser"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pInterfaceUser}">
                                <TextBox Name="textbox_pInterfaceUserPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            <Popup Name="popup_pInterfacePass"
                                   Placement="Right" PlacementTarget="{Binding ElementName=passwordbox_pInterfacePass}">
                                <TextBox Name="textbox_pInterfacePassPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>

                        </Grid>

                        <!--
                        Clicking ok will signal the code behind to check the user's input, and if all is well,
                        establish a new interface to a procon layer.  Some input validation is in the code behind,
                        but it is possible to enter some odd values.  Both actions (upon success) will close the
                        popup.
                        -->
                        <Button Name="button_pInterfaceOk"
                                Grid.Row="7" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                        <Button Name="button_pInterfaceCancel"
                                Grid.Row="7" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                    </Grid>
                </Border>
                <!-- End Content -->
            </Grid>
        </Popup>


        <!--
        Add Connection Popup
        This popup's visibility is controlled by the state of the "Add Connection" toggle button.
        The control dims the rest of the window and displays a pop-up in the middle of the screen.
        -->
        <Popup Name="popup_pConnection"
               Placement="Center" PopupAnimation="Fade" AllowsTransparency="True"
               StaysOpen="False" IsOpen="{Binding ElementName=togglebutton_AddConnection, Path=IsChecked}">
            <Grid Name="grid_pConnection"
                  Width="{Binding ElementName=grid_Main, Path=ActualWidth}"
                  Height="{Binding ElementName=grid_Main, Path=ActualHeight}"
                  Background="{StaticResource PopupBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--
                The content in the middle of the screen.
                -->
                <Border Name="border_pConnection"
                        Grid.Row="1" Grid.Column="1"
                        CornerRadius="4" Background="{StaticResource ControlBackgroundBrush}">
                    <Grid Name="grid2_pConnection">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>

                        <!--
                        This is affectively the title of the popup along with a description
                        of what the user needs to do to complete the action of this popup.
                        -->
                        <Label Name="label_pConnectionTitle"
                               Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                               Style="{StaticResource style_LabelTopHeader}" />
                        <TextBlock Name="textblock_pConnectionMessage"
                                   Grid.Row="3" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                   Style="{StaticResource style_TextBlockSubHeader}"
                                   MaxWidth="{Binding ElementName=grid_Main, Path=ActualWidth,
                                              Converter={StaticResource reduceTo}, ConverterParameter=0.75}" />
                        <Grid Name="grid3_pConnection"
                              Grid.Row="5" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                              Grid.IsSharedSizeScope="True" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--
                            The labels for a connection.  These simply are headers for the following
                            input controls below.  The miscellaneous information is only visible when
                            required, as specified by the converter.
                            -->
                            <Label Name="label_pConnectionType"
                                   Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pConnectionHost"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pConnectionPort"
                                   Grid.Row="4" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pConnectionPass"
                                   Grid.Row="6" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pConnectionMisc"
                                   Grid.Row="8" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                   Visibility="{Binding ElementName=combobox_pConnectionType, Path=SelectedItem,
                                                Converter={StaticResource isExtraGameConv}}" />

                            <!--
                            This is the input portion for a connection.  The Type, IP, Port, and Password
                            are required, while the miscellaneous information is only required if the game
                            specified requires it.  Whether the game requires it is controlled by the
                            converter.
                            -->
                            <ComboBox Name="combobox_pConnectionType"
                                      Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                      ItemTemplate="{StaticResource EnumTemplate}" />
                            <TextBox Name="textbox_pConnectionHost"
                                     Grid.Row="2" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" />
                            <TextBox Name="textbox_pConnectionPort"
                                     Grid.Row="4" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" />
                            <PasswordBox Name="passwordbox_pConnectionPass"
                                         Grid.Row="6" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" 
                                         KeyDown="TextBox_KeyPressed" />
                            <TextBox Name="textbox_pConnectionMisc"
                                     Grid.Row="8" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                     Visibility="{Binding ElementName=label_pConnectionMisc, Path=Visibility}" 
                                     KeyDown="TextBox_KeyPressed" />
                            
                            <!--
                            These popup controls' visibility is managed in the code behind whenever
                            the ok button (or when the user presses enter on the last textbox) to pop-up
                            beside their respective controls containing a message on what the user did wrong.
                            -->
                            <Popup Name="popup_pConnectionHost"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pConnectionHost}">
                                <TextBox Name="textbox_pConnectionHostPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            <Popup Name="popup_pConnectionPort"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pConnectionPort}">
                                <TextBox Name="textbox_pConnectionPortPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            <Popup Name="popup_pConnectionPass"
                                   Placement="Right" PlacementTarget="{Binding ElementName=passwordbox_pConnectionPass}">
                                <TextBox Name="textbox_pConnectionPassPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            <Popup Name="popup_pConnectionMisc"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pConnectionMisc}">
                                <TextBox Name="textbox_pConnectionMiscPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            
                        </Grid>
                        
                        <!--
                        Clicking ok will signal the code behind to check the user's input, and if all is well,
                        establish a connection to the game server.  Some input validation is in the code behind,
                        but it is possible to enter some odd values.  Both actions (upon success) will close the
                        popup.
                        -->
                        <Button Name="button_pConnectionOk"
                                Grid.Row="7" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                        <Button Name="button_pConnectionCancel"
                                Grid.Row="7" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                    </Grid>
                </Border>
                <!-- End Content -->
            </Grid>
        </Popup>

        
        <!--
        Add Group Popup
        This popup's visibility is controlled by the state of the "Add Group" toggle button.
        The control dims the rest of the window and displays a pop-up in the middle of the screen.
        -->
        <Popup Name="popup_pGroup"
               Placement="Center" PopupAnimation="Fade" AllowsTransparency="True"
               StaysOpen="False" IsOpen="{Binding ElementName=togglebutton_AddGroup, Path=IsChecked}">
            <Grid Name="grid_pGroup"
                  Width="{Binding ElementName=grid_Main, Path=ActualWidth}"
                  Height="{Binding ElementName=grid_Main, Path=ActualHeight}"
                  Background="{StaticResource PopupBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--
                The content in the middle of the screen.
                -->
                <Border Name="border_pGroup"
                        Grid.Row="1" Grid.Column="1"
                        CornerRadius="4" Background="{StaticResource ControlBackgroundBrush}">
                    <Grid Name="grid2_pGroup">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>

                        <!--
                        This is affectively the title of the popup along with a description
                        of what the user needs to do to complete the action of this popup.
                        -->
                        <Label Name="label_pGroupTitle"
                               Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                               Style="{StaticResource style_LabelTopHeader}" />
                        <TextBlock Name="textblock_pGroupMessage"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                   Style="{StaticResource style_TextBlockSubHeader}"
                                   MaxWidth="{Binding ElementName=grid_Main, Path=ActualWidth,
                                              Converter={StaticResource reduceTo}, ConverterParameter=0.75}" />
                        
                        <!--
                        The groups control has no headers for the single textbox on the page.
                        Instead, the message tells the user what they should enter into the textbox.
                        -->
                        <TextBox Name="textbox_pGroupName"
                                 Grid.Row="4" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                 KeyDown="TextBox_KeyPressed" />

                        <!--
                        Clicking ok will signal the code behind to check the user's input, and if all is well,
                        create a group with the specified name.  The only input validation is to check if the
                        textbox is empty.  Both actions (upon success) will close the popup.
                        -->
                        <Button Name="button_pGroupOk"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                        <Button Name="button_pGroupCancel"
                                Grid.Row="5" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />

                        <!--
                        These popup controls' visibility is managed in the code behind whenever
                        the ok button (or when the user presses enter on the last textbox) to pop-up
                        beside their respective controls containing a message on what the user did wrong.
                        -->
                        <Popup Name="popup_pGroupName"
                               Placement="Right" PlacementTarget="{Binding ElementName=textbox_pGroupName}">
                            <TextBox Name="textbox_pGroupNamePopup"
                                     IsHitTestVisible="False" IsReadOnly="True" />
                        </Popup>
                        
                    </Grid>
                </Border>
                <!-- End Content -->
            </Grid>
        </Popup>


        <!--
        Add Account Popup
        This popup's visibility is controlled by the state of the "Add Account" toggle button.
        The control dims the rest of the window and displays a pop-up in the middle of the screen.
        -->
        <Popup Name="popup_pAccount"
               Placement="Center" PopupAnimation="Fade" AllowsTransparency="True"
               StaysOpen="False" IsOpen="{Binding ElementName=togglebutton_AddAccount, Path=IsChecked}">
            <Grid Name="grid_pAccount"
                  Width="{Binding ElementName=grid_Main, Path=ActualWidth}"
                  Height="{Binding ElementName=grid_Main, Path=ActualHeight}"
                  Background="{StaticResource PopupBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--
                The content in the middle of the screen.
                -->
                <Border Name="border_pAccount"
                        Grid.Row="1" Grid.Column="1"
                        CornerRadius="4" Background="{StaticResource ControlBackgroundBrush}">
                    <Grid Name="grid2_pAccount">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>

                        <!--
                        This is affectively the title of the popup along with a description
                        of what the user needs to do to complete the action of this popup.
                        -->
                        <Label Name="label_pAccountTitle"
                               Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                               Style="{StaticResource style_LabelTopHeader}" />
                        <TextBlock Name="textblock_pAccountMessage"
                                   Grid.Row="2" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3"
                                   Style="{StaticResource style_TextBlockSubHeader}"
                                   MaxWidth="{Binding ElementName=grid_Main, Path=ActualWidth,
                                              Converter={StaticResource reduceTo}, ConverterParameter=0.75}" />
                        <Grid Name="grid3_pAccount"
                              Grid.Row="4" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--
                            The labels for an account.  These simply are headers for the following
                            input controls below.
                            -->
                            <Label Name="label_pAccountName"
                                   Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />
                            <Label Name="label_pAccountPass"
                                   Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1" />

                            <!--
                            This is the input portion for an account.
                            -->
                            <TextBox Name="textbox_pAccountName"
                                     Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1" />
                            <PasswordBox Name="textbox_pAccountPass"
                                         Grid.Row="1" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                         KeyDown="TextBox_KeyPressed" />

                            <!--
                            These popup controls' visibility is managed in the code behind whenever
                            the ok button (or when the user presses enter on the last textbox) to pop-up
                            beside their respective controls containing a message on what the user did wrong.
                            -->
                            <Popup Name="popup_pAccountName"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pAccountName}">
                                <TextBox Name="textbox_pAccountNamePopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>
                            <Popup Name="popup_pAccountPass"
                                   Placement="Right" PlacementTarget="{Binding ElementName=textbox_pAccountPass}">
                                <TextBox Name="textbox_pAccountPassPopup"
                                         IsHitTestVisible="False" IsReadOnly="True" />
                            </Popup>

                        </Grid>

                        <!--
                        Clicking ok will signal the code behind to check the user's input, and if all is well,
                        create an account with the specified name and password.  The only input validation is
                        to check if the textbox is empty.  Both actions (upon success) will close the popup.
                        -->
                        <Button Name="button_pAccountOk"
                                Grid.Row="6" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                        <Button Name="button_pAccountCancel"
                                Grid.Row="6" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="1"
                                Click="Button_Clicked" />
                    </Grid>
                </Border>
                <!-- End Content -->
            </Grid>
        </Popup>


    </Grid>
</Window>
